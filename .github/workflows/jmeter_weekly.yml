name: Weekly JMeter Load Test

on:
  workflow_dispatch:   # 手动触发（用于测试前端显示）
  push:                # 推一次也会跑，便于调试
    branches: [ main ]
  schedule:
    - cron: '0 4 * * 6'  # PDT 的周五 21:00
    - cron: '0 5 * * 6'  # PST 的周五 21:00

jobs:
  run-jmeter:
    runs-on: ubuntu-latest
    env:
      JMETER_WORKDIR: jmeter
      JMETER_PLAN: autotest1.jmx   # ← 改成你实际的 jmx 文件名
      TZ_LOCAL: America/Vancouver

    steps:
      - uses: actions/checkout@v4

      # 仅在 schedule 触发时做“周五21:00”校验；手动/推送时不拦截
      - name: Guard for local Friday 21:00 (schedule only)
        if: ${{ github.event_name == 'schedule' }}
        run: |
          export TZ="$TZ_LOCAL"
          DOW=$(date +%u)
          HOUR=$(date +%H)
          if [ "$DOW" != "5" ] || [ "$HOUR" != "21" ]; then
            echo "Not Fri 21:00 local. Skip scheduled run."
            exit 78
          fi

      # 可选：打印目录帮助你核对路径
      - name: Show workspace tree
        run: |
          echo "Workspace:"; pwd
          echo "List files:"; ls -R

      - name: Run JMeter (non-GUI)
        run: |
          mkdir -p "$JMETER_WORKDIR/out"
          docker run --rm \
            -v "$GITHUB_WORKSPACE/$JMETER_WORKDIR":/tests \
            -w /tests \
            justb4/jmeter:5.6 \
            -n -t "$JMETER_PLAN" \
            -j out/jmeter.log \
            -l out/results.jtl \
            -e -o out/report

      - name: Fail job if there are sample errors
        run: |
          if grep -q ' s="false"' "$JMETER_WORKDIR/out/results.jtl"; then
            echo "JMeter detected failed samples."
            exit 1
          fi

      - name: Upload report artifacts
        uses: actions/upload-artifact@v4
        with:
          name: jmeter-report
          path: |
            ${{ env.JMETER_WORKDIR }}/out/report
            ${{ env.JMETER_WORKDIR }}/out/results.jtl
            ${{ env.JMETER_WORKDIR }}/out/jmeter.log
